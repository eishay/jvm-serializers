<h3>Test Platform</h3>
OS:Mac OS X
JVM:Oracle Corporation 1.8.0_102
CPU:null os-arch:null
Cores (incl HT):8

<h3>Disclaimer</h3>

This test focusses on en/decoding of a cyclefree data structure, but the featureset of the libraries compared differs a lot:
<ul><li>some serializers support cycle detection/object sharing others just write non-cyclic tree structures</li>
<li>some include full metadata in serialized output, some don't</li>
<li>some are cross platform, some are language specific</li>
<li>some are text based, some are binary,</li>
<li>some support versioning forward/backward, both, some don't</li></ul>

(See "ToolBehavior":wiki/ToolBehavior)
Other test data will yield different results (e.g. adding a non ascii char to every string :-) ). However the results give a raw estimation of library performance.


<h3>Serializers (no shared refs)</h3>
Benchmarks serializers
<ul><li>Only cycle free tree structures. An object referenced twice will be serialized twice.</li>
<li>no manual optimizations.</li>
<li>schema is known in advance (pre registration or even class generation). (Not all might make use of that)</li>
</ul>
<b>Ser Time+Deser Time (ns)</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x374&chd=t:592,1066,980,1038,1059,1264,1691,1645,1842,2741,2886,2864,2638,2792,2031,2659,2029,2005|935,1263,1545,1669,1656,1459,1690,2326,2383,1504,1513,1550,1827,1694,2666,2051,2703,2867&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,4872&chxr=1,0,4872&chxt=y,x&chxl=0:|smile%2Fjackson%2Bafterburner%2Fdatabind|cbor%2Fjackson%2Bafterburner%2Fdatabind|scala%2Fsbinary|cbor-col%2Fjackson%2Fdatabind|thrift-compact|capnproto|flatbuffers|thrift|protobuf|smile-col%2Fjackson%2Fdatabind|msgpack%2Fdatabind|json-array%2Ffastjson%2Fdatabind|kryo-flat-pre|fst-flat-pre|json%2Fdsl-platform|minified-json%2Fdsl-platform|protostuff|colfer'/>
<br clear='all' /><b>Size, Compressed size [light] in bytes</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x374&chd=t:375,385,383,386,397,630,392,378,401,402,402,379,393,480,409,430,494,462|251,266,273,272,262,34,276,296,287,292,294,378,394,331,417,404,346,434&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,896&chxr=1,0,896&chxt=y,x&chxl=0:|capnproto|smile%2Fjackson%2Bafterburner%2Fdatabind|thrift|minified-json%2Fdsl-platform|smile%2Fjackson%2Fdatabind|json-col%2Fjackson%2Fdatabind|json-array%2Ffastjson%2Fdatabind|cbor-col%2Fjackson%2Fdatabind|smile-col%2Fjackson%2Fdatabind|fst-flat-pre|scala%2Fsbinary|msgpack%2Fdatabind|xml%2Fexi-manual|protobuf|protostuff|thrift-compact|colfer|kryo-flat-pre'/>
<br clear='all' />
<pre>                                   create     ser   deser   total   size  +dfl
colfer                                 95     592     934    1527    651   385
protostuff                            122    1066    1263    2329    658   386
minified-json/dsl-platform             82     980    1545    2525    826   409
json/dsl-platform                      81    1038    1669    2707   1048   472
fst-flat-pre                           95    1059    1656    2715    688   401
kryo-flat-pre                          97    1264    1459    2723    626   375
json-array/fastjson/databind           97    1691    1690    3381    757   379
msgpack/databind                       96    1645    2326    3971    668   392
smile-col/jackson/databind             93    1842    2383    4225    694   402
protobuf                              208    2741    1505    4245    659   397
thrift                                159    2886    1513    4399    834   430
flatbuffers                           103    2864    1550    4414    920   503
capnproto                              96    2638    1827    4465    896   462
thrift-compact                        196    2792    1694    4486    656   383
cbor-col/jackson/databind              98    2031    2666    4697    696   402
scala/sbinary                         619    2659    2051    4710    674   378
cbor/jackson+afterburner/databind      94    2029    2703    4732   1021   487
smile/jackson+afterburner/databind     98    2005    2867    4872    840   494
smile/jackson/databind                 97    2155    3042    5196    811   480
json/fastjson/databind                 95    2551    3159    5710   1154   489
json-col/jackson/databind              94    2361    3432    5792    787   393
cbor/jackson/databind                  95    2274    3692    5966   1021   487
json/jackson-jr/databind               93    2490    3490    5979   1031   468
json/jackson+afterburner/databind      95    2693    3664    6356   1218   490
json/jackson/databind                  91    2713    4373    7087   1218   490
json/protostuff-runtime                95    3355    3757    7112   1119   469
xml/jackson/databind                   99    6055    9609   15664   1572   529
json/gson/databind                    107   12075   10742   22817   1154   485
xml/xstream+c                          94    8931   14893   23824   1038   455
bson/jackson/databind                 104   10501   13729   24231   1240   559
json/javax-tree/glassfish            2350   12813   20882   33695   1048   474
xml/exi-manual                         95   19690   16300   35990    664   630
java-built-in                          96    7807   30540   38347   1416   759
scala/java-built-in                   597   12006   45638   57644   1763   938
json/protobuf                         208   13845  108496  122341   1066   461
json/json-lib/databind                 96   39724  162422  202145   1048   477
</pre>



<h3>Full Object Graph Serializers</h3>
Contains serializer(-configurations)
<ul><li>supporting full object graph write/read. Object graph may contain cycles. If an Object is referenced twice, it will be so after deserialization.</li>
<li>nothing is known in advance, no class generation, no preregistering of classes. Everything is captured at runtime using e.g. reflection.</li>
<li>note this usually cannot be used cross language, however JSON/XML formats may enable cross language deserialization.</li>
</ul>
<b>Ser Time+Deser Time (ns)</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x314&chd=t:1653,1967,2887,2778,4713,4572,9250,9973,5951,7867,8615,12662,25573,39581,9622|1484,1732,2457,2605,3906,8862,10017,18899,26896,28622,33113,31379,34621,70403,181655&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,191277&chxr=1,0,191277&chxt=y,x&chxl=0:|xml%2FJAXB|yaml%2Fjackson%2Fdatabind|json%2Fflexjson%2Fdatabind|jboss-marshalling-serial|java-built-in-serializer|stephenerialization|jboss-marshalling-river|xml%2FJAXB%2Faalto|jboss-serialization|hessian|jboss-marshalling-river-ct|fst|kryo-serializer|protostuff-graph-runtime|protostuff-graph'/>
<br clear='all' /><b>Size, Compressed size [light] in bytes</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x314&chd=t:386,393,424,434,444,554,647,505,495,742,759,892,556,559,749|272,287,288,319,327,393,554,731,774,641,657,606,995,1004,823&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,1572&chxr=1,0,1572&chxt=y,x&chxl=0:|stephenerialization|xml%2FJAXB|xml%2FJAXB%2Faalto|jboss-serialization|java-built-in-serializer|jboss-marshalling-serial|yaml%2Fjackson%2Fdatabind|json%2Fflexjson%2Fdatabind|jboss-marshalling-river|hessian|jboss-marshalling-river-ct|fst|kryo-serializer|protostuff-graph-runtime|protostuff-graph'/>
<br clear='all' />
<pre>                                   create     ser   deser   total   size  +dfl
protostuff-graph                      125    1653    1484    3137    658   386
protostuff-graph-runtime               94    1967    1732    3699    680   393
kryo-serializer                        96    2887    2457    5344    712   424
fst                                   105    2778    2604    5383    753   434
jboss-marshalling-river-ct             95    4713    3906    8619    771   444
hessian                                97    4572    8862   13434    947   554
jboss-serialization                    94    9250   10017   19267   1498   892
xml/JAXB/aalto                        103    9973   18899   28872   1551   556
jboss-marshalling-river                93    5951   26896   32847   1201   647
stephenerialization                   109    7867   28622   36489   1572   749
java-built-in-serializer              100    8615   33113   41728   1416   759
jboss-marshalling-serial               95   12662   31379   44041   1383   742
json/flexjson/databind                 94   25573   34620   60194   1236   505
yaml/jackson/databind                  98   39581   70404  109984   1269   495
xml/JAXB                               96    9622  181656  191277   1563   559
</pre>



<h3>Cross Lang Binary Serializers</h3>
Contains serializer(-configurations)
<ul><li>Only cycle free tree structures. An object referenced twice will be serialized twice.</li>
<li>schema is known in advance (pre registration, intermediate message description languages, class generation).</li>
</ul>
<b>Ser Time+Deser Time (ns)</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x254&chd=t:592,1092,1294,1645,2741,2886,2864,2638,2792,2274,4572,10501|935,1280,1437,2326,1504,1513,1550,1827,1694,3692,8862,13730&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,24231&chxr=1,0,24231&chxt=y,x&chxl=0:|bson%2Fjackson%2Fdatabind|hessian|cbor%2Fjackson%2Fdatabind|thrift-compact|capnproto|flatbuffers|thrift|protobuf|msgpack%2Fdatabind|protobuf%2Fprotostuff-runtime|protobuf%2Fprotostuff|colfer'/>
<br clear='all' /><b>Size, Compressed size [light] in bytes</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x254&chd=t:385,383,397,397,392,404,430,462,503,554,487,559|266,273,262,262,276,277,404,434,417,393,534,681&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,1240&chxr=1,0,1240&chxt=y,x&chxl=0:|bson%2Fjackson%2Fdatabind|cbor%2Fjackson%2Fdatabind|hessian|flatbuffers|capnproto|thrift|protobuf%2Fprotostuff-runtime|msgpack%2Fdatabind|protobuf|protobuf%2Fprotostuff|thrift-compact|colfer'/>
<br clear='all' />
<pre>                                   create     ser   deser   total   size  +dfl
colfer                                 95     592     934    1527    651   385
protobuf/protostuff                   118    1092    1280    2372    659   397
protobuf/protostuff-runtime            96    1294    1436    2731    681   404
msgpack/databind                       96    1645    2326    3971    668   392
protobuf                              208    2741    1505    4245    659   397
thrift                                159    2886    1513    4399    834   430
flatbuffers                           103    2864    1550    4414    920   503
capnproto                              96    2638    1827    4465    896   462
thrift-compact                        196    2792    1694    4486    656   383
cbor/jackson/databind                  95    2274    3692    5966   1021   487
hessian                                97    4572    8862   13434    947   554
bson/jackson/databind                 104   10501   13729   24231   1240   559
</pre>



<h3>XML/JSon Serializers</h3>
<ul><li>text format based. Usually can be read by anybody. Frequently inline schema inside data.</li>
<li>Mixed regarding required preparation, object graph awareness (references).</li>
</ul>
<b>Ser Time+Deser Time (ns)</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x374&chd=t:980,1038,1691,1842,2031,2551,2361,2490,2713,3355,6055,12075,8931,9973,12813,19690,25573,39581|1545,1669,1690,2383,2666,3159,3431,3489,4374,3757,9609,10742,14893,18899,20882,16300,34621,70403&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,109984&chxr=1,0,109984&chxt=y,x&chxl=0:|yaml%2Fjackson%2Fdatabind|json%2Fflexjson%2Fdatabind|xml%2Fexi-manual|json%2Fjavax-tree%2Fglassfish|xml%2FJAXB%2Faalto|xml%2Fxstream%2Bc|json%2Fgson%2Fdatabind|xml%2Fjackson%2Fdatabind|json%2Fprotostuff-runtime|json%2Fjackson%2Fdatabind|json%2Fjackson-jr%2Fdatabind|json-col%2Fjackson%2Fdatabind|json%2Ffastjson%2Fdatabind|cbor-col%2Fjackson%2Fdatabind|smile-col%2Fjackson%2Fdatabind|json-array%2Ffastjson%2Fdatabind|json%2Fdsl-platform|minified-json%2Fdsl-platform'/>
<br clear='all' /><b>Size, Compressed size [light] in bytes</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x374&chd=t:630,402,402,379,393,409,468,455,472,474,477,461,469,489,485,490,505,495|34,292,294,378,394,417,563,583,576,574,571,605,650,665,669,728,731,774&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,1269&chxr=1,0,1269&chxt=y,x&chxl=0:|yaml%2Fjackson%2Fdatabind|json%2Fflexjson%2Fdatabind|json%2Fjackson%2Fdatabind|json%2Fgson%2Fdatabind|json%2Ffastjson%2Fdatabind|json%2Fprotostuff-runtime|json%2Fprotobuf|json%2Fjson-lib%2Fdatabind|json%2Fjavax-tree%2Fglassfish|json%2Fdsl-platform|xml%2Fxstream%2Bc|json%2Fjackson-jr%2Fdatabind|minified-json%2Fdsl-platform|json-col%2Fjackson%2Fdatabind|json-array%2Ffastjson%2Fdatabind|cbor-col%2Fjackson%2Fdatabind|smile-col%2Fjackson%2Fdatabind|xml%2Fexi-manual'/>
<br clear='all' />
<pre>                                   create     ser   deser   total   size  +dfl
minified-json/dsl-platform             82     980    1545    2525    826   409
json/dsl-platform                      81    1038    1669    2707   1048   472
json-array/fastjson/databind           97    1691    1690    3381    757   379
smile-col/jackson/databind             93    1842    2383    4225    694   402
cbor-col/jackson/databind              98    2031    2666    4697    696   402
json/fastjson/databind                 95    2551    3159    5710   1154   489
json-col/jackson/databind              94    2361    3432    5792    787   393
json/jackson-jr/databind               93    2490    3490    5979   1031   468
json/jackson/databind                  91    2713    4373    7087   1218   490
json/protostuff-runtime                95    3355    3757    7112   1119   469
xml/jackson/databind                   99    6055    9609   15664   1572   529
json/gson/databind                    107   12075   10742   22817   1154   485
xml/xstream+c                          94    8931   14893   23824   1038   455
xml/JAXB/aalto                        103    9973   18899   28872   1551   556
json/javax-tree/glassfish            2350   12813   20882   33695   1048   474
xml/exi-manual                         95   19690   16300   35990    664   630
json/flexjson/databind                 94   25573   34620   60194   1236   505
yaml/jackson/databind                  98   39581   70404  109984   1269   495
json/protobuf                         208   13845  108496  122341   1066   461
xml/JAXB                               96    9622  181656  191277   1563   559
json/json-lib/databind                 96   39724  162422  202145   1048   477
</pre>



<h3>Manually optimized Serializers</h3>
all flavours of manually optimized serializers. Handcoded and hardwired to exactly the benchmark's message structures.
<ul><li>illustrates what's possible, at what level generic approaches can be optimized in case
</li></ul>
<b>Ser Time+Deser Time (ns)</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x374&chd=t:989,1185,991,1569,1359,1444,1645,1465,1630,1638,2071,2212,3224,2958,2704,2197,4457,6028|1169,976,1249,1075,1353,1296,1123,1842,2118,2131,2072,2367,1797,2349,3175,6045,5194,7746&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,13774&chxr=1,0,13774&chxt=y,x&chxl=0:|json%2Fgson%2Fmanual|xml%2Faalto-manual|jboss-marshalling-river-manual|json%2Fprotostuff-manual|avro-specific|avro-generic|json%2Fjackson%2Fmanual|jboss-marshalling-river-ct-manual|cbor%2Fjackson%2Fmanual|msgpack%2Fmanual|smile%2Fjackson%2Fmanual|wobly-compact|java-manual|kryo-opt|wobly|protostuff-manual|datakernel|kryo-manual'/>
<br clear='all' /><b>Size, Compressed size [light] in bytes</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x374&chd=t:370,365,372,369,369,376,386,386,384,378,405,461,488,513,465,463,443,463|240,258,251,255,255,255,267,272,284,296,315,322,308,330,435,451,551,568&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,1031&chxr=1,0,1031&chxt=y,x&chxl=0:|json%2Fjackson%2Fmanual|json%2Fprotostuff-manual|jboss-marshalling-river-manual|cbor%2Fjackson%2Fmanual|xml%2Ffastinfo-manual|xml%2Fxstream%2Bc-fastinfo|smile%2Fjackson%2Fmanual|jboss-marshalling-river-ct-manual|java-manual|wobly|protostuff-manual|msgpack%2Fmanual|wobly-compact|avro-specific|avro-generic|kryo-opt|datakernel|kryo-manual'/>
<br clear='all' />
<pre>                                   create     ser   deser   total   size  +dfl
kryo-manual                            92     989    1168    2158    610   370
datakernel                            122    1185     977    2161    623   365
protostuff-manual                      95     991    1248    2240    658   386
wobly                                  72    1569    1075    2644    668   384
kryo-opt                               93    1359    1353    2712    623   372
java-manual                            94    1444    1296    2740    674   378
wobly-compact                          75    1645    1123    2768    631   376
smile/jackson/manual                   92    1465    1842    3307    783   461
msgpack/manual                         97    1630    2118    3748    653   386
cbor/jackson/manual                   104    1638    2131    3769    900   465
jboss-marshalling-river-ct-manual      98    2071    2072    4143    720   405
json/jackson/manual                    95    2212    2367    4579   1031   463
avro-generic                          621    3224    1798    5021    624   369
avro-specific                         125    2958    2349    5307    624   369
json/protostuff-manual                 96    2704    3175    5879    994   443
jboss-marshalling-river-manual         91    2197    6045    8242    914   463
xml/aalto-manual                      103    4457    5195    9651   1332   525
json/gson/manual                      104    6028    7746   13774   1031   463
xml/woodstox-manual                   119    6770    7751   14521   1327   518
bson/mongodb/manual                   101    7375    9535   16911   1079   529
xml/javolution/manual                 106    5970   11036   17006   1058   476
xml/fastinfo-manual                    96   10502    6696   17198    843   513
xml/xstream+c-aalto                   105    6886   10794   17679   1076   485
json/gson/manual-tree                  91    8461    9602   18062   1048   472
json/json-smart/manual-tree            96   11986    7270   19256   1067   477
xml/xstream+c-fastinfo                 96   10105    9617   19722    796   488
xml/xstream+c-woodstox                 96    8146   13243   21388   1076   485
json/javax-stream/glassfish            94    8571   17203   25774   1031   463
json/org.json/manual-tree              93   12254   15539   27793   1048   472
json/json.simple/manual                95   12375   16239   28613   1067   477
json/svenson/databind                 105    9198   23102   32300   1067   480
json/jsonij/manual-jpath               98   46532   20140   66672   1100   474
json/argo/manual-tree                  93  130501   27085  157587   1048   477
</pre>



<h3>Cost of features</h3>
shows performance vs convenience of manually-selected libs.
<ul><li>cycle free, schema known at compile time, manual optimization: kryo-manual, msgpack/manual</li>
<li>cycle free, schema known at compile time: protostuff, fst-flat-pre, kryo-flat-pre. (note: protostuff uses class generation while the other two just require a list of classes to be written)</li>
<li>cycle free, schema UNKNOWN at compile time: fst-flat, kryo-flat, protostuff-runtime, msgpack/databind</li>
<li>full object graph awareness, schema UNKNOWN at compile time: fst, kryo.</li>
</ul>
<b>Ser Time+Deser Time (ns)</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x234&chd=t:989,1066,1244,1059,1264,1472,1435,1630,1645,2887,2778|1169,1263,1441,1656,1459,1797,2067,2118,2326,2457,2605&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,5383&chxr=1,0,5383&chxt=y,x&chxl=0:|fst|kryo-serializer|msgpack%2Fdatabind|msgpack%2Fmanual|fst-flat|kryo-flat|kryo-flat-pre|fst-flat-pre|protostuff-runtime|protostuff|kryo-manual'/>
<br clear='all' /><b>Size, Compressed size [light] in bytes</b><br><img src='https://chart.googleapis.com/chart?cht=bhs&chs=600x234&chd=t:370,375,386,386,392,393,415,401,424,434,434|240,251,267,272,276,287,270,287,288,317,319&chco=5d99f9,4d89f9&chdlp=t&chbh=15&chds=0,753&chxr=1,0,753&chxt=y,x&chxl=0:|fst|fst-flat|kryo-serializer|fst-flat-pre|kryo-flat|protostuff-runtime|msgpack%2Fdatabind|protostuff|msgpack%2Fmanual|kryo-flat-pre|kryo-manual'/>
<br clear='all' />
<pre>                                   create     ser   deser   total   size  +dfl
kryo-manual                            92     989    1168    2158    610   370
protostuff                            122    1066    1263    2329    658   386
protostuff-runtime                     95    1244    1441    2685    680   393
fst-flat-pre                           95    1059    1656    2715    688   401
kryo-flat-pre                          97    1264    1459    2723    626   375
kryo-flat                              98    1472    1797    3269    685   415
fst-flat                               93    1435    2067    3502    751   434
msgpack/manual                         97    1630    2118    3748    653   386
msgpack/databind                       96    1645    2326    3971    668   392
kryo-serializer                        96    2887    2457    5344    712   424
fst                                   105    2778    2604    5383    753   434
</pre>

<h3>Full data</h3>


<pre>                                   create     ser   deser   total   size  +dfl
colfer                                 95     592     934    1527    651   385
kryo-manual                            92     989    1168    2158    610   370
datakernel                            122    1185     977    2161    623   365
protostuff-manual                      95     991    1248    2240    658   386
protostuff                            122    1066    1263    2329    658   386
protobuf/protostuff                   118    1092    1280    2372    659   397
minified-json/dsl-platform             82     980    1545    2525    826   409
wobly                                  72    1569    1075    2644    668   384
protostuff-runtime                     95    1244    1441    2685    680   393
json/dsl-platform                      81    1038    1669    2707   1048   472
kryo-opt                               93    1359    1353    2712    623   372
fst-flat-pre                           95    1059    1656    2715    688   401
kryo-flat-pre                          97    1264    1459    2723    626   375
protobuf/protostuff-runtime            96    1294    1436    2731    681   404
java-manual                            94    1444    1296    2740    674   378
wobly-compact                          75    1645    1123    2768    631   376
protostuff-graph                      125    1653    1484    3137    658   386
kryo-flat                              98    1472    1797    3269    685   415
smile/jackson/manual                   92    1465    1842    3307    783   461
json-array/fastjson/databind           97    1691    1690    3381    757   379
fst-flat                               93    1435    2067    3502    751   434
protostuff-graph-runtime               94    1967    1732    3699    680   393
msgpack/manual                         97    1630    2118    3748    653   386
cbor/jackson/manual                   104    1638    2131    3769    900   465
msgpack/databind                       96    1645    2326    3971    668   392
jboss-marshalling-river-ct-manual      98    2071    2072    4143    720   405
smile-col/jackson/databind             93    1842    2383    4225    694   402
protobuf                              208    2741    1505    4245    659   397
thrift                                159    2886    1513    4399    834   430
flatbuffers                           103    2864    1550    4414    920   503
capnproto                              96    2638    1827    4465    896   462
thrift-compact                        196    2792    1694    4486    656   383
json/jackson/manual                    95    2212    2367    4579   1031   463
cbor-col/jackson/databind              98    2031    2666    4697    696   402
scala/sbinary                         619    2659    2051    4710    674   378
cbor/jackson+afterburner/databind      94    2029    2703    4732   1021   487
smile/jackson+afterburner/databind     98    2005    2867    4872    840   494
avro-generic                          621    3224    1798    5021    624   369
smile/jackson/databind                 97    2155    3042    5196    811   480
avro-specific                         125    2958    2349    5307    624   369
kryo-serializer                        96    2887    2457    5344    712   424
fst                                   105    2778    2604    5383    753   434
json/fastjson/databind                 95    2551    3159    5710   1154   489
json-col/jackson/databind              94    2361    3432    5792    787   393
json/protostuff-manual                 96    2704    3175    5879    994   443
cbor/jackson/databind                  95    2274    3692    5966   1021   487
json/jackson-jr/databind               93    2490    3490    5979   1031   468
json/jackson+afterburner/databind      95    2693    3664    6356   1218   490
json/jackson/databind                  91    2713    4373    7087   1218   490
json/protostuff-runtime                95    3355    3757    7112   1119   469
jboss-marshalling-river-manual         91    2197    6045    8242    914   463
jboss-marshalling-river-ct             95    4713    3906    8619    771   444
xml/aalto-manual                      103    4457    5195    9651   1332   525
hessian                                97    4572    8862   13434    947   554
json/gson/manual                      104    6028    7746   13774   1031   463
xml/woodstox-manual                   119    6770    7751   14521   1327   518
xml/jackson/databind                   99    6055    9609   15664   1572   529
bson/mongodb/manual                   101    7375    9535   16911   1079   529
xml/javolution/manual                 106    5970   11036   17006   1058   476
xml/fastinfo-manual                    96   10502    6696   17198    843   513
xml/xstream+c-aalto                   105    6886   10794   17679   1076   485
json/gson/manual-tree                  91    8461    9602   18062   1048   472
json/json-smart/manual-tree            96   11986    7270   19256   1067   477
jboss-serialization                    94    9250   10017   19267   1498   892
xml/xstream+c-fastinfo                 96   10105    9617   19722    796   488
xml/xstream+c-woodstox                 96    8146   13243   21388   1076   485
json/gson/databind                    107   12075   10742   22817   1154   485
xml/xstream+c                          94    8931   14893   23824   1038   455
bson/jackson/databind                 104   10501   13729   24231   1240   559
json/javax-stream/glassfish            94    8571   17203   25774   1031   463
json/org.json/manual-tree              93   12254   15539   27793   1048   472
json/json.simple/manual                95   12375   16239   28613   1067   477
xml/JAXB/aalto                        103    9973   18899   28872   1551   556
json/svenson/databind                 105    9198   23102   32300   1067   480
jboss-marshalling-river                93    5951   26896   32847   1201   647
json/javax-tree/glassfish            2350   12813   20882   33695   1048   474
xml/exi-manual                         95   19690   16300   35990    664   630
stephenerialization                   109    7867   28622   36489   1572   749
java-built-in                          96    7807   30540   38347   1416   759
java-built-in-serializer              100    8615   33113   41728   1416   759
jboss-marshalling-serial               95   12662   31379   44041   1383   742
scala/java-built-in                   597   12006   45638   57644   1763   938
json/flexjson/databind                 94   25573   34620   60194   1236   505
json/jsonij/manual-jpath               98   46532   20140   66672   1100   474
yaml/jackson/databind                  98   39581   70404  109984   1269   495
json/protobuf                         208   13845  108496  122341   1066   461
json/argo/manual-tree                  93  130501   27085  157587   1048   477
xml/JAXB                               96    9622  181656  191277   1563   559
json/json-lib/databind                 96   39724  162422  202145   1048   477
</pre>



<pre>                                   Effort          Format         Structure  Misc
colfer                             CLASSES_KNOWN   BIN_CROSSLANG  FLAT_TREE  [] generated code                                           
kryo-manual                        MANUAL_OPT      BINARY         FLAT_TREE  [] manually optimized                                       
datakernel                         MANUAL_OPT      BINARY         FLAT_TREE  [] manually optimized                                       
protostuff-manual                  MANUAL_OPT      BINARY         FLAT_TREE  [] manual                                                   
protostuff                         CLASSES_KNOWN   BINARY         FLAT_TREE  [] generated code                                           
protobuf/protostuff                CLASSES_KNOWN   BIN_CROSSLANG  FLAT_TREE  [] protobuf + generated code                                
minified-json/dsl-platform         CLASSES_KNOWN   JSON           FLAT_TREE  [] JSON with minified property names and without default values.
wobly                              MANUAL_OPT      BINARY         FLAT_TREE  []                                                          
protostuff-runtime                 ZERO_KNOWLEDGE  BINARY         FLAT_TREE  [] reflection                                               
json/dsl-platform                  CLASSES_KNOWN   JSON           FLAT_TREE  [] Serializes all properties with exact names.              
kryo-opt                           MANUAL_OPT      BINARY         FLAT_TREE  [] manually optimized                                       
fst-flat-pre                       CLASSES_KNOWN   BINARY         FLAT_TREE  [] fst in unshared mode with preregistered classes          
kryo-flat-pre                      CLASSES_KNOWN   BINARY         FLAT_TREE  [] no shared refs, preregistered classes                    
protobuf/protostuff-runtime        ZERO_KNOWLEDGE  BIN_CROSSLANG  FLAT_TREE  [] protobuf + reflection                                    
java-manual                        MANUAL_OPT      BINARY         FLAT_TREE  []                                                          
wobly-compact                      MANUAL_OPT      BINARY         FLAT_TREE  []                                                          
protostuff-graph                   CLASSES_KNOWN   BINARY         FULL_GRAPH [] graph + generated code                                   
kryo-flat                          ZERO_KNOWLEDGE  BINARY         FLAT_TREE  [] default, no shared refs                                  
smile/jackson/manual               MANUAL_OPT      BINARY         FLAT_TREE  []                                                          
json-array/fastjson/databind       ZERO_KNOWLEDGE  JSON           FLAT_TREE  []                                                          
fst-flat                           ZERO_KNOWLEDGE  BINARY         FLAT_TREE  [] fst default, but unshared mode                           
protostuff-graph-runtime           ZERO_KNOWLEDGE  BINARY         FULL_GRAPH [] graph + reflection                                       
msgpack/manual                     MANUAL_OPT      BIN_CROSSLANG  FLAT_TREE  [] uses positional (column) layout (instead of Maps std impl uses) to eliminate use of names
cbor/jackson/manual                MANUAL_OPT      BIN_CROSSLANG  FLAT_TREE  []                                                          
msgpack/databind                   CLASSES_KNOWN   BIN_CROSSLANG  FLAT_TREE  [] uses positional (column) layout (instead of Maps std impl uses) to eliminate use of names
jboss-marshalling-river-ct-manual  MANUAL_OPT      BINARY         FULL_GRAPH [] full graph preregistered classes, manual optimization    
smile-col/jackson/databind         ZERO_KNOWLEDGE  JSON           FLAT_TREE  [] uses positional (column) layout to eliminate use of names
protobuf                           CLASSES_KNOWN   BIN_CROSSLANG  FLAT_TREE  []                                                          
thrift                             CLASSES_KNOWN   BIN_CROSSLANG  FLAT_TREE  []                                                          
flatbuffers                        CLASSES_KNOWN   BIN_CROSSLANG  FLAT_TREE  []                                                          
capnproto                          CLASSES_KNOWN   BIN_CROSSLANG  FLAT_TREE  []                                                          
thrift-compact                     CLASSES_KNOWN   BIN_CROSSLANG  FLAT_TREE  []                                                          
json/jackson/manual                MANUAL_OPT      JSON           FLAT_TREE  []                                                          
cbor-col/jackson/databind          ZERO_KNOWLEDGE  JSON           FLAT_TREE  [] uses positional (column) layout to eliminate use of names
scala/sbinary                      MISC            MISC           UNKNOWN    [] null                                                     
cbor/jackson+afterburner/databind  ZERO_KNOWLEDGE  BINARY         FLAT_TREE  [] uses bytecode generation to reduce overhead              
smile/jackson+afterburner/databind ZERO_KNOWLEDGE  BINARY         FLAT_TREE  [] uses bytecode generation to reduce overhead              
avro-generic                       MANUAL_OPT      BIN_CROSSLANG  FLAT_TREE  []                                                          
smile/jackson/databind             ZERO_KNOWLEDGE  BINARY         FLAT_TREE  []                                                          
avro-specific                      MANUAL_OPT      BIN_CROSSLANG  UNKNOWN    []                                                          
kryo-serializer                    ZERO_KNOWLEDGE  BINARY         FULL_GRAPH [] default                                                  
fst                                ZERO_KNOWLEDGE  BINARY         FULL_GRAPH [] default: JDK serialization drop-in-replacement mode      
json/fastjson/databind             ZERO_KNOWLEDGE  JSON           FLAT_TREE  []                                                          
json-col/jackson/databind          ZERO_KNOWLEDGE  JSON           FLAT_TREE  [] uses positional (column) layout to eliminate use of names
json/protostuff-manual             MANUAL_OPT      JSON           FLAT_TREE  [] json + manual                                            
cbor/jackson/databind              ZERO_KNOWLEDGE  BIN_CROSSLANG  FLAT_TREE  []                                                          
json/jackson-jr/databind           ZERO_KNOWLEDGE  JSON           FLAT_TREE  []                                                          
json/jackson+afterburner/databind  ZERO_KNOWLEDGE  BINARY         FLAT_TREE  [] uses bytecode generation to reduce overhead              
json/jackson/databind              ZERO_KNOWLEDGE  JSON           FLAT_TREE  []                                                          
json/protostuff-runtime            ZERO_KNOWLEDGE  JSON           FLAT_TREE  [] json + reflection                                        
jboss-marshalling-river-manual     MANUAL_OPT      BINARY         FULL_GRAPH [] full graph with manual optimizations                     
jboss-marshalling-river-ct         CLASSES_KNOWN   BINARY         FULL_GRAPH [] full graph with preregistered classes                    
xml/aalto-manual                   MANUAL_OPT      XML            UNKNOWN    []                                                          
hessian                            ZERO_KNOWLEDGE  BIN_CROSSLANG  FULL_GRAPH []                                                          
json/gson/manual                   MANUAL_OPT      JSON           FLAT_TREE  []                                                          
xml/woodstox-manual                MANUAL_OPT      XML            UNKNOWN    []                                                          
xml/jackson/databind               ZERO_KNOWLEDGE  XML            FLAT_TREE  []                                                          
bson/mongodb/manual                MANUAL_OPT      BIN_CROSSLANG  FLAT_TREE  []                                                          
xml/javolution/manual              MANUAL_OPT      XML            FLAT_TREE  []                                                          
xml/fastinfo-manual                MANUAL_OPT      XML            UNKNOWN    []                                                          
xml/xstream+c-aalto                MANUAL_OPT      XML            FLAT_TREE  []                                                          
json/gson/manual-tree              MANUAL_OPT      JSON           FLAT_TREE  []                                                          
json/json-smart/manual-tree        MANUAL_OPT      JSON           FLAT_TREE  []                                                          
jboss-serialization                ZERO_KNOWLEDGE  BINARY         FULL_GRAPH []                                                          
xml/xstream+c-fastinfo             MANUAL_OPT      XML            FLAT_TREE  []                                                          
xml/xstream+c-woodstox             MANUAL_OPT      XML            FLAT_TREE  []                                                          
json/gson/databind                 ZERO_KNOWLEDGE  JSON           FLAT_TREE  []                                                          
xml/xstream+c                      ZERO_KNOWLEDGE  XML            FLAT_TREE  []                                                          
bson/jackson/databind              CLASSES_KNOWN   BIN_CROSSLANG  FLAT_TREE  []                                                          
json/javax-stream/glassfish        MANUAL_OPT      JSON           FLAT_TREE  []                                                          
json/org.json/manual-tree          MANUAL_OPT      JSON           FLAT_TREE  []                                                          
json/json.simple/manual            MANUAL_OPT      JSON           FLAT_TREE  []                                                          
xml/JAXB/aalto                     CLASSES_KNOWN   XML            FULL_GRAPH []                                                          
json/svenson/databind              MANUAL_OPT      JSON           FLAT_TREE  []                                                          
jboss-marshalling-river            ZERO_KNOWLEDGE  BINARY         FULL_GRAPH [] full graph zero knowledge                                
json/javax-tree/glassfish          ZERO_KNOWLEDGE  JSON           FLAT_TREE  []                                                          
xml/exi-manual                     ZERO_KNOWLEDGE  XML            UNKNOWN    []                                                          
stephenerialization                ZERO_KNOWLEDGE  BINARY         FULL_GRAPH [] null                                                     
java-built-in                      ZERO_KNOWLEDGE  BINARY         FLAT_TREE  []                                                          
java-built-in-serializer           ZERO_KNOWLEDGE  BINARY         FULL_GRAPH []                                                          
jboss-marshalling-serial           ZERO_KNOWLEDGE  BINARY         FULL_GRAPH []                                                          
scala/java-built-in                MISC            MISC           UNKNOWN    [] null                                                     
json/flexjson/databind             ZERO_KNOWLEDGE  JSON           FULL_GRAPH []                                                          
json/jsonij/manual-jpath           MANUAL_OPT      JSON           FLAT_TREE  []                                                          
yaml/jackson/databind              ZERO_KNOWLEDGE  JSON           FULL_GRAPH []                                                          
json/protobuf                      CLASSES_KNOWN   JSON           FLAT_TREE  []                                                          
json/argo/manual-tree              MANUAL_OPT      JSON           FLAT_TREE  []                                                          
xml/JAXB                           CLASSES_KNOWN   XML            FULL_GRAPH []                                                          
json/json-lib/databind             ZERO_KNOWLEDGE  JSON           FLAT_TREE  []                                                          
</pre>

